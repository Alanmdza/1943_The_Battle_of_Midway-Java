package juego0.niveles;

import java.util.Vector;

import juego0.Jefes.Tone;
import juego0.bonus.powerUps.Contenedor;
import juego0.core.Fondo;
import juego0.core.ObjetoGrafico;
import juego0.enemigos.*;

public class Nivel1 extends Nivel {
    public Nivel1(Vector<ObjetoGrafico> pendientesGraficos, long[] diffSeconds, long[] diffMinutes) {
        fondo = new Fondo("images/1984/fondo.png");
        fondo.setY(-fondo.getHeight() + 810);
        this.pendientesGraficos = pendientesGraficos;
        this.diffSeconds = diffSeconds;
        this.diffMinutes = diffMinutes;
    }

    @Override
    public void run() {
        pendientesGraficos.add(new Contenedor(30, 30,pendientesGraficos));
        pendientesGraficos.add(new Enemigo2(180, -260, true));
        pendientesGraficos.add(new Enemigo2(120, -200, false));
        pendientesGraficos.add(new Enemigo2(60, -140, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(560, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, false));
        pendientesGraficos.add(new Enemigo2(440, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(180, -140, false));
        pendientesGraficos.add(new Enemigo2(120, -200, false));
        pendientesGraficos.add(new Enemigo2(60, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(440, -260, true));
        pendientesGraficos.add(new Enemigo2(500, -200, false));
        pendientesGraficos.add(new Enemigo2(560, -140, true));
        esperar(1);
        pendientesGraficos.add(new EnemigoRojo(-100, 200));
        pendientesGraficos.add(new EnemigoRojo(-200, 200));
        pendientesGraficos.add(new EnemigoRojo(-300, 200));
        pendientesGraficos.add(new EnemigoRojo(-400, 200));
        pendientesGraficos.add(new EnemigoRojo(-500, 200));
        esperar(4);
        pendientesGraficos.add(new Enemigo2(280, -140, true));
        pendientesGraficos.add(new Enemigo2(220, -200, false));
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(340, -260, false));
        pendientesGraficos.add(new Enemigo2(400, -200, true));
        pendientesGraficos.add(new Enemigo2(460, -140, false));
        esperar(3);
        pendientesGraficos.add(new EnemigoRojo(-100, 200));
        pendientesGraficos.add(new EnemigoRojo(-200, 200));
        pendientesGraficos.add(new EnemigoRojo(-300, 200));
        pendientesGraficos.add(new EnemigoRojo(-400, 200));
        pendientesGraficos.add(new EnemigoRojo(-500, 200));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(280, -140, true));
        pendientesGraficos.add(new Enemigo2(220, -200, false));
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(340, -260, false));
        pendientesGraficos.add(new Enemigo2(400, -200, true));
        pendientesGraficos.add(new Enemigo2(460, -140, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(280, -140, true));
        pendientesGraficos.add(new Enemigo2(220, -200, false));
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(340, -260, false));
        pendientesGraficos.add(new Enemigo2(400, -200, true));
        pendientesGraficos.add(new Enemigo2(460, -140, false));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        pendientesGraficos.add(new EnemigoGde1(-150, 200));
        esperar(3);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(3);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        pendientesGraficos.add(new EnemigoGde1(-150, 200));
        esperar(3);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(3);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(3);
        pendientesGraficos.add(new EnemigoRojo(-100, 200));
        pendientesGraficos.add(new EnemigoRojo(-200, 200));
        pendientesGraficos.add(new EnemigoRojo(-300, 200));
        pendientesGraficos.add(new EnemigoRojo(-400, 200));
        pendientesGraficos.add(new EnemigoRojo(-500, 200));
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(2);
        pendientesGraficos.add(new Enemigo2(100, -140, false));
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -380, false));
        esperar(3);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        pendientesGraficos.add(new Enemigo2(200, -220, false));
        pendientesGraficos.add(new Enemigo2(200, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        pendientesGraficos.add(new Enemigo2(400, -320, false));
        pendientesGraficos.add(new Enemigo2(400, -220, false));
        pendientesGraficos.add(new Enemigo2(400, -420, false));
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(2);
        pendientesGraficos.add(new Contact());
        esperar(8);
        this.estado = 4;
        jefe = new Tone(pendientesGraficos,this);
        esperar(1);
        pendientesGraficos.add(new Enemigo2(180, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(500, -200, true));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(200, -320, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(300, -260, false));
        esperar(1);
        pendientesGraficos.add(new Enemigo4(810, 300));
        esperar(1);
        pendientesGraficos.add(new Enemigo2(160, -260, true));
        esperar(2);
        estado = 5;
    }

    private void esperar(int seg) {
        while (this.diffSeconds[0] + (60 * this.diffMinutes[0]) < tiempoEspera + seg) {
            try {
                sleep(1);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        tiempoEspera += seg;
    }
    public void setEstado(int estado) {
        this.estado = estado;
    }
}
